<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:todoLIST">


    <Style x:Key = "textInCheckBoxStyle" TargetType = "TextBox">
        <Setter Property="Background" Value ="#262626"/>
        <Setter Property="Foreground" Value="#5E5E5E"/>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#808080" />
    </Style>
    <Style x:Key="GridSide" TargetType="Grid">
        <Setter Property="Background" Value="#262626"/>
    </Style>
    <Style x:Key="BorderMain" TargetType="Border">
        <Setter Property="Background" Value="#1E1E1E" />
    </Style>
    <Style x:Key="textInTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="textInCheckBoxxStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Ellipse x:Name="CheckBackground"
                             Width="20"
                             Height="20"
                             Stroke="Gray"
                             StrokeThickness="1"
                             Fill="Transparent"
                             Margin="5"
                             HorizontalAlignment="Left"/>
                        <Path x:Name="CheckMark"
                          Stroke="Black"
                          StrokeThickness="2"
                          Data="M 0,5 L 5,10 L 15,0"
                          Margin="8"
                          Visibility="Collapsed"/>
                        <ContentPresenter Margin="40,5,0,0" VerticalAlignment="Top"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="0, 5, 5, 0" Background="#262626" BorderBrush="#262626" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="0"  Margin="1"  Background="#262626"  BorderBrush="#262626" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="#1e1e1e" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#262626" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#262626" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


    <Style x:Key="LableStyle" TargetType="Label">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="RectangleStyle" TargetType="Rectangle">
        <Setter Property="Stroke" Value="Gray"/>
    </Style>
    <Style x:Key="CompletedStyle" TargetType="Button">
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
</ResourceDictionary>